{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","irl","className","src","alt","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loadding","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,8BAAIA,EAAJ,W,uBCPCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBV,QARvB,kBAWZM,GAXY,4CAAH,sDCMPK,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAGtB,ECLwB,SAACA,GACzB,MAA0BrB,mBAAS,CAC/B4B,KAAM,GACNO,UAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,UAAU,SAGvB,CAACd,IAEGe,EDX4BK,CAAapB,GAAlCW,EAAd,EAAQJ,KAAcO,EAAtB,EAAsBA,SAItB,OACI,qCACI,+BAAKd,EAAL,OACCc,GAAY,mBAAGlB,UAAU,mCAAb,yBACb,qBAAKA,UAAU,8CAAf,SAGQe,EAAOF,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,eAECA,GADCA,EAAIjB,aEGtB4B,EArBO,WAClB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OAAO,qCACH,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ4C,EAAWb,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCblCuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b2073ff7.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from 'prop-types'\n\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handerInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handerInputChange} />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","import React from 'react'\n\n\nexport const GifGridItem = ({ id, title, irl }) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={irl} alt={title} />\n            <p>{title} </p>\n        </div>\n    );\n}","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=4TMBHJhOtFHj62qXTctTVnGQJGOHwhzG&q=${encodeURI(category)}&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            irl: img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n}","/*import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";*/\nimport { GifGridItem } from \"./GifGridItem\";\n\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport const GifGrid = ({ category }) => {\n\n\n    const { data: images, loadding } = useFetchGifs(category);\n\n\n    //getGifs();\n    return (\n        <>\n            <h3>{category} </h3>\n            {loadding && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n            <div className=\"card-grid animate__animated animate__fadeIn\">\n                {\n\n                    images.map(img => {\n                        return <GifGridItem\n                            key={img.id}\n                            {...img} />\n                    })\n                }\n            </div>\n        </>\n\n    );\n};","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loadding: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loadding: false\n                });\n            });\n    }, [category]);\n\n    return state;\n}","import { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GiftExpertApp = () => {\n    const [categories, setCategories] = useState(['One punch']);\n\n    /*const handleAdd = () => {\n        setCategories(['Xmen', ...categories]);\n    }*/\n\n    return <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={setCategories} />\n        <hr />\n        <ol>\n            {\n                categories.map(category =>\n                    <GifGrid key={category} category={category} />\n                )\n            }\n        </ol>\n    </>\n}\n\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp'\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}